<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syuan Tech Blog on Syuan Tech Blog</title>
    <link>https://eva19950630.github.io/</link>
    <description>Recent content in Syuan Tech Blog on Syuan Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 02 Nov 2018 21:31:53 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>［Java］異常處理機制：throw與throws</title>
      <link>https://eva19950630.github.io/2018/18_11_02_java-throw-throws/</link>
      <pubDate>Fri, 02 Nov 2018 21:31:53 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_11_02_java-throw-throws/</guid>
      <description>

&lt;h2 id=&#34;throw&#34;&gt;throw&lt;/h2&gt;

&lt;p&gt;用於丟出一個異常物件。&lt;/p&gt;

&lt;p&gt;語法：寫於程式語句中(method內)。&lt;/p&gt;

&lt;p&gt;throw [例外物件變數];&lt;/p&gt;

&lt;p&gt;舉例：throw new Exception(&amp;ldquo;這是例外錯誤！&amp;rdquo;);&lt;/p&gt;

&lt;h2 id=&#34;throws&#34;&gt;throws&lt;/h2&gt;

&lt;p&gt;用於宣告此method會丟出哪些Exception，表示此method可能會發生哪些例外，加s意指可以同時使用多個Exception子類別修飾方法。&lt;/p&gt;

&lt;p&gt;語法：寫於宣告method的後方。&lt;/p&gt;

&lt;p&gt;舉例：public void function() throws Exception {&amp;hellip;}&lt;/p&gt;

&lt;h3 id=&#34;上述兩者差異&#34;&gt;上述兩者差異&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;寫的地方不同：&lt;code&gt;throw&lt;/code&gt;寫在語句中；&lt;code&gt;throws&lt;/code&gt;寫在函數頭。&lt;/li&gt;
&lt;li&gt;執行可能性：若編譯過程中執行&lt;code&gt;throw&lt;/code&gt;則表示一定發生異常；而&lt;code&gt;throws&lt;/code&gt;只是宣告該method可能發生異常，但不一定會發生這些異常。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;配合使用try-catch&#34;&gt;配合使用try catch&lt;/h2&gt;

&lt;p&gt;Coding時，盡可能在可能出現異常的地方，使用&lt;code&gt;try{...}catch{...}&lt;/code&gt;來捕捉(發現)異常並進行處理。&lt;/p&gt;

&lt;p&gt;發現異常後，一定要在&lt;code&gt;catch{...}&lt;/code&gt;內進行異常發生時的處理。&lt;/p&gt;

&lt;p&gt;如果有在method內寫throw語句丟出異常，盡量在函數頭加上throws進行聲明，若真的發生異常，則會將異常交給上層呼叫此異常方法進行處理(通常在&lt;code&gt;catch{...}&lt;/code&gt;內)。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class test {
	public static void main (String[] args) {
		try {
			score(101);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

	public static void score(int num) throws Exception {
		if (num &amp;gt; 100)
			throw new Exception(&amp;quot;Over&amp;quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Tips&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果有使用到繼承時，若父類別某個method有throws某些例外，子類別欲重新定義該方法，可以throws父類別該方法宣告的某些例外，但不可throws父類別方法中「未宣告」的例外。&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jhengjyun.blogspot.com/2010/06/java-throwthrows.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://jhengjyun.blogspot.com/2010/06/java-throwthrows.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hk.saowen.com/a/3759f3e723abe683f4b20f65bec494c26b097467c095b77de2b0b1778eee8b5e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://hk.saowen.com/a/3759f3e723abe683f4b20f65bec494c26b097467c095b77de2b0b1778eee8b5e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=282977&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=282977&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://openhome.cc/Gossip/Java/Throw.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://openhome.cc/Gossip/Java/Throw.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Github Pages架設Hugo靜態blog</title>
      <link>https://eva19950630.github.io/2018/18_10_29_github-pages-hugo/</link>
      <pubDate>Mon, 29 Oct 2018 09:50:03 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_10_29_github-pages-hugo/</guid>
      <description>

&lt;p&gt;Github除了可以使用Git Server儲存code之外，也可當作靜態網頁的Server，所以可作為個人靜態網頁或blog，但僅能使用git指令上傳修改檔案，而且只能顯示「靜態」網頁內容。&lt;/p&gt;

&lt;h3 id=&#34;操作步驟分為兩部分-使用macos&#34;&gt;操作步驟分為兩部分(使用MacOS)&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在本地端架設Hugo個人網站(blog)&lt;/li&gt;
&lt;li&gt;部署至Github上成為個人Github pages&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;第一部分-在本地端架設hugo個人網站-blog&#34;&gt;第一部分：在本地端架設Hugo個人網站(blog)&lt;/h2&gt;

&lt;p&gt;Hugo為open source的靜態網頁框架產生器，可快速建立個人網站或blog。&lt;/p&gt;

&lt;h3 id=&#34;step1-使用terminal安裝homebrew&#34;&gt;Step1：使用terminal安裝Homebrew&lt;/h3&gt;

&lt;p&gt;Homebrew為open source的軟體套件管理工具，可簡化在Mac上安裝或卸載套件的過程。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step2-使用terminal安裝hugo&#34;&gt;Step2：使用terminal安裝Hugo&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step3-使用hugo創建新網站&#34;&gt;Step3：使用Hugo創建新網站&lt;/h3&gt;

&lt;p&gt;到想要的目錄下，創建Hugo新網站。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# [website-name]為自定網站資料夾名稱
hugo new site [website-name]
cd [website-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;創建完成後，可在terminal看到以下畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/001.png&#34; alt=&#34;成功建立Hugo網站&#34; /&gt;&lt;/p&gt;

&lt;p&gt;cd至該網站資料夾內，可看到內部資料夾結構如下：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/002.png&#34; alt=&#34;Hugo內部資料夾結構&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;step4-更換主題-theme&#34;&gt;Step4：更換主題(Theme)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;官網&lt;/a&gt;提供許多網站主題，若找到合適的即可使用git clone下載該主題。&lt;/p&gt;

&lt;p&gt;在官網主題內找尋喜歡的主題，並點選進去：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/003.png&#34; alt=&#34;進入主題github&#34; /&gt;&lt;/p&gt;

&lt;p&gt;複製該主題的git網址，並使用git clone下載至&lt;code&gt;themes&lt;/code&gt;資料夾中：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/004.png&#34; alt=&#34;複製git網址&#34; /&gt;&lt;/p&gt;

&lt;p&gt;cd至剛Step3創建好Hugo網站根目錄下的&lt;code&gt;themes&lt;/code&gt;資料夾中(預設目前路徑在Hugo網站根目錄下)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd themes
git clone [該主題git網址]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step5-編輯config-toml檔案&#34;&gt;Step5：編輯config.toml檔案&lt;/h3&gt;

&lt;p&gt;config.toml檔案在根目錄下，使用sublime或其他文字編輯器進行修改，由於之後會將此Hugo個人網站部署至Github上，因此&lt;code&gt;baseURL&lt;/code&gt;需配置為Github pages的網址，而theme為更換剛剛Step4下載的主題資料夾名稱。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;baseURL = &amp;quot;https://[個人Github帳號].github.io/&amp;quot;   # [個人Github帳號]需改為Github帳號
languageCode = &amp;quot;zh-tw&amp;quot;
title = &amp;quot;[My New Hugo Site]&amp;quot;   # [My New Hugo Site]為自定網站名稱
theme = &amp;quot;[Theme dir name]&amp;quot;   # [Theme dir name]為主題資料夾名稱
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step6-建立新文章-post&#34;&gt;Step6：建立新文章(post)&lt;/h3&gt;

&lt;p&gt;在根目錄下輸入以下指令建立新文章。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new posts/[post name].md   # [post name]為自定文章檔案名稱
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按下enter後，則可以在terminal看到以下建立成功畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/005.png&#34; alt=&#34;成功建立新文章&#34; /&gt;&lt;/p&gt;

&lt;p&gt;若建立成功，則可以在目錄下的&lt;code&gt;/contents/posts&lt;/code&gt;資料夾中，看見剛剛新增的文章檔案(.md檔)，使用文字編輯器修改此md檔。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;---
title: &amp;quot;[New Post]&amp;quot;   # [New Post]為自定文章標題
date: 2018-10-29T11:06:37+08:00
draft: false   # 原本為true，改為false
---

[此處可輸入文章內容]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文章使用markdown語法編輯，未來建立文章皆使用Step6這個方式，&lt;code&gt;draft&lt;/code&gt;記得改為false。&lt;/p&gt;

&lt;p&gt;若文章中有使用圖片，圖片檔案放入根目錄中的&lt;code&gt;/static&lt;/code&gt;資料夾內。&lt;/p&gt;

&lt;h3 id=&#34;step7-本地端執行測試&#34;&gt;Step7：本地端執行測試&lt;/h3&gt;

&lt;p&gt;以上步驟即可完成Hugo網站的大致雛形，若想看成品，可在本地端使用terminal先執行測試(在根目錄下)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo serve -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打開瀏覽器，輸入網址&lt;a href=&#34;http://localhost:1313/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt;，可看到如下畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/006.png&#34; alt=&#34;Hugo網站創建完成&#34; /&gt;&lt;/p&gt;

&lt;p&gt;若要中止執行，在terminal按下&lt;code&gt;ctrl+C&lt;/code&gt;即可。&lt;/p&gt;

&lt;h2 id=&#34;第二部分-部署至github上成為個人github-pages&#34;&gt;第二部分：部署至Github上成為個人Github pages&lt;/h2&gt;

&lt;p&gt;Github提供靜態網站的server，使用者可將靜態網站上傳上去，作為Github pages，一隻帳號僅有一個主頁，這個部分將操作部署剛剛創建好的Hugo網站至Github上。&lt;/p&gt;

&lt;h3 id=&#34;step1-在github上新增一個新repository&#34;&gt;Step1：在Github上新增一個新repository&lt;/h3&gt;

&lt;p&gt;repository name取名為&lt;code&gt;[Github帳號].github.io&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;step2-在hugo網站根目錄下建立-public資料夾&#34;&gt;Step2：在Hugo網站根目錄下建立/public資料夾&lt;/h3&gt;

&lt;p&gt;使用terminal在根目錄下輸入以下指令，執行完後會在根目錄下產生一個&lt;code&gt;public&lt;/code&gt;資料夾。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step3-在-public資料夾內初始化git並連結到github-pages&#34;&gt;Step3：在/public資料夾內初始化git並連結到Github pages&lt;/h3&gt;

&lt;p&gt;先至Github將剛新增repo的git網址複製下來(如第一部分Step4第二張圖)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public

# 初始化git
git init
git remote add origin [貼上剛複製好的repo git URL]
git remote -v   # 檢查origin名稱是否有遠端連結到該git URL

# 建立第一個commit
git add .
git commit -m &amp;quot;Initial commit&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Hint&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有時候在操作&lt;code&gt;git push&lt;/code&gt;指令時，系統常常會告訴你要設定好要push去哪個分支，產生類似以下的錯誤。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push

fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

	git push --set-upstream origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若今天在push時加入&lt;code&gt;-u&lt;/code&gt;這個參數：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-u&lt;/code&gt;這個參數為表示設定upstream(上游)，以上述例子來看，&lt;code&gt;-u&lt;/code&gt;設定下去後，就會把&lt;code&gt;origin/master&lt;/code&gt;設定為本地&lt;code&gt;master&lt;/code&gt;分支的upstream，下次要再執行&lt;code&gt;git push&lt;/code&gt;指令而不加任何參數時，預設值則會知道是要將master這個分支推往origin這個遠端節點。&lt;/p&gt;

&lt;h3 id=&#34;step4-查看個人github-pages&#34;&gt;Step4：查看個人Github pages&lt;/h3&gt;

&lt;p&gt;上個步驟push完成後，打開瀏覽器輸入網址https://[Github帳號].github.io/，就可以看到自己的Github pages了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hugo建立的網站要連結至Github pages，需在&lt;code&gt;public&lt;/code&gt;資料夾下進行push，往後若網站進行修改後，則需在根目錄下先執行&lt;code&gt;hugo&lt;/code&gt;指令，在cd至public資料夾中進行commit與push。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;另外，若想要將Hugo網站整個資料夾上傳到Github另一個repo，也是可以的，上傳過程中遇到資料夾重複上傳的warning可自動忽略。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/github/using-github-pages.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gitbook.tw/chapters/github/using-github-pages.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/github/push-to-github.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gitbook.tw/chapters/github/push-to-github.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown筆記</title>
      <link>https://eva19950630.github.io/2018/18_10_28_markdown-note/</link>
      <pubDate>Sun, 28 Oct 2018 20:27:16 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_10_28_markdown-note/</guid>
      <description>

&lt;h2 id=&#34;一般文字-text&#34;&gt;一般文字(Text)&lt;/h2&gt;

&lt;p&gt;test&lt;/p&gt;

&lt;h2 id=&#34;標題-title&#34;&gt;標題(Title)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# test1.1
## test1.2
### test1.3
#### test1.4
##### test1.5
###### test1.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;test1-1&#34;&gt;test1.1&lt;/h1&gt;

&lt;h2 id=&#34;test1-2&#34;&gt;test1.2&lt;/h2&gt;

&lt;h3 id=&#34;test1-3&#34;&gt;test1.3&lt;/h3&gt;

&lt;h4 id=&#34;test1-4&#34;&gt;test1.4&lt;/h4&gt;

&lt;h5 id=&#34;test1-5&#34;&gt;test1.5&lt;/h5&gt;

&lt;h6 id=&#34;test1-6&#34;&gt;test1.6&lt;/h6&gt;

&lt;h2 id=&#34;引用文字-blockquote&#34;&gt;引用文字(Blockquote)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; test2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;test2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;粗體-斜體-刪除線&#34;&gt;粗體/斜體/刪除線&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 粗體
**test3.1**
__test3.2__
# 斜體
*test4.1*
_test4.2_
# 刪除線
~~test5~~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;test3.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;test3.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;test4.1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;test4.2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;test5&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&#34;無序列點&#34;&gt;無序列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;* test6.1
* test6.2
* test6.3

- test6.4
- test6.5
- test6.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;test6.1&lt;/li&gt;
&lt;li&gt;test6.2&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.3&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.4&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.5&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.6&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;有序列點&#34;&gt;有序列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. test7.1
2. test7.2
3. test7.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;test7.1&lt;/li&gt;
&lt;li&gt;test7.2&lt;/li&gt;
&lt;li&gt;test7.3&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;巢狀列點&#34;&gt;巢狀列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. test8.1
   1. test8.1.1
   2. test8.1.2
2. test8.2
   * test8.2.1
   * test8.2.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;test8.1

&lt;ol&gt;
&lt;li&gt;test8.1.1&lt;/li&gt;
&lt;li&gt;test8.1.2&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;test8.2

&lt;ul&gt;
&lt;li&gt;test8.2.1&lt;/li&gt;
&lt;li&gt;test8.2.2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;`test9`

```html
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;test10&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
(```)
# 括號()去掉
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;test9&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;test10&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;連結-link&#34;&gt;連結(Link)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 符號皆為半型
[test11](https://www.google.com/)
test12，連結至Google(https://www.google.com/)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;test11&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;test12，連結至Google(&lt;a href=&#34;https://www.google.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.google.com/&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;分隔線&#34;&gt;分隔線&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;***
----
- - -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;表格-table&#34;&gt;表格(Table)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;名稱 | 說明
---------- | ----------
test13.1 | about test13.1
test13.2 | about test13.2
test13.3 | about test13.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名稱&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;test13.1&lt;/td&gt;
&lt;td&gt;about test13.1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;test13.2&lt;/td&gt;
&lt;td&gt;about test13.2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;test13.3&lt;/td&gt;
&lt;td&gt;about test13.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;圖片-image&#34;&gt;圖片(Image)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![Alt text](/path/to/img.jpg)

# hugo blog需將圖片放置static資料夾中，資料夾內可自由新增其他子資料夾
![test14](/18_10_28_markdown-note/test14.jpg)

# 也可直接使用&amp;lt;img&amp;gt;標籤，即可調整長寬
&amp;lt;img src=&amp;quot;/18_10_28_markdown-note/test14.jpg&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;300&amp;quot;&amp;gt;&amp;lt;/img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_10_28_markdown-note/test14.jpg&#34; alt=&#34;test14&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_10_28_markdown-note/test14.jpg&#34; width=&#34;300&#34; height=&#34;300&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h2 id=&#34;跳脫字元&#34;&gt;跳脫字元&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 下方這些符號插入後會產生效果，為了不顯示效果，在下方符號前面插入反斜線(\)，即可顯示原符號
# \ ` * _ {} [] () # + - . !

\*test15\*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*test15*&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://markdown.tw/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://markdown.tw/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/markdown/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://ithelp.ithome.com.tw/markdown/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://eva19950630.github.io/about/</link>
      <pubDate>Sun, 28 Oct 2018 16:11:24 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/about/</guid>
      <description>

&lt;h3 id=&#34;education&#34;&gt;Education&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2017-2018 / Master in Computer Science, University of Taipei, Taiwan&lt;/li&gt;
&lt;li&gt;2013-2017 / Bachelor in Computer Science, University of Taipei, Taiwan&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;interests&#34;&gt;Interests&lt;/h3&gt;

&lt;p&gt;WEB/APP design &amp;amp; development, Deep Learning, Data analysis&lt;/p&gt;

&lt;h3 id=&#34;skill&#34;&gt;Skill&lt;/h3&gt;

&lt;p&gt;HTML, CSS, JS, PHP, Java, C, C++, C#, Python&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>