<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syuan Tech Blog on Syuan Tech Blog</title>
    <link>https://eva19950630.github.io/</link>
    <description>Recent content in Syuan Tech Blog on Syuan Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 09 Nov 2018 11:07:48 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>安裝Apache Tomcat Server(for Mac OS)</title>
      <link>https://eva19950630.github.io/2018/18_11_09_apache-tomcat-install-for-mac/</link>
      <pubDate>Fri, 09 Nov 2018 11:07:48 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_11_09_apache-tomcat-install-for-mac/</guid>
      <description>

&lt;h2 id=&#34;download-apache-tomcat-8-version-8-0-53&#34;&gt;Download Apache Tomcat 8(Version 8.0.53)&lt;/h2&gt;

&lt;p&gt;目前穩定版本，Release Data：2018/06/29。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/download-80.cgi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://tomcat.apache.org/download-80.cgi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下載Version8.0.53的&lt;code&gt;.zip&lt;/code&gt;或&lt;code&gt;.tar.gz&lt;/code&gt;，下載後解壓縮出一個&lt;code&gt;apache-tomcat-8.0.53&lt;/code&gt;的資料夾。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_09_apache-tomcat-install-for-mac/001.png&#34; alt=&#34;下載.zip或.tar.gz&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-stop-apache-tomcat-server&#34;&gt;Start/Stop Apache Tomcat Server&lt;/h2&gt;

&lt;h3 id=&#34;step1-將解壓縮後的apache-tomcat-8-0-53資料夾移至-usr-local-目錄下&#34;&gt;Step1：將解壓縮後的apache-tomcat-8.0.53資料夾移至&lt;code&gt;/usr/local&lt;/code&gt;目錄下&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 預設apache-tomcat-8.0.53資料夾位置在下載資料夾中
$ sudo mv ~/Download/apache-tomcat-8.0.53 /usr/local
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step2-新增symbolic-link在-library-目錄下&#34;&gt;Step2：新增symbolic link在&lt;code&gt;/Library&lt;/code&gt;目錄下&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo ln -s /usr/local/apache-tomcat-8.0.53 /Library/Tomcat
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step3-更改此symbolic-link的使用者權限&#34;&gt;Step3：更改此symbolic link的使用者權限&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# [username]更改為自己的username
$ sudo chown -R [username] /Library/Tomcat
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step4-設定bin目錄下的所有shell-scripts有被執行的權限&#34;&gt;Step4：設定bin目錄下的所有shell scripts有被執行的權限&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo chmod +x /Library/Tomcat/bin/*.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step5-開啟-關閉tomcat-server服務&#34;&gt;Step5：開啟/關閉Tomcat Server服務&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 開啟Tomcat Server服務
$ /Library/Tomcat/bin/startup.sh

# 關閉Tomcat Server服務
$ /Library/Tomcat/bin/shutdown.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;開啟瀏覽器，網址輸入&lt;a href=&#34;http://localhost:8080&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:8080&lt;/a&gt;，出現以下畫面即代表開啟服務成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_09_apache-tomcat-install-for-mac/002.png&#34; alt=&#34;開啟Tomcat Server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Tips&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果要查看&lt;code&gt;Server Status&lt;/code&gt;、&lt;code&gt;Manager App&lt;/code&gt;、&lt;code&gt;Host Manager&lt;/code&gt;這些功能，需要新增管理者的角色權限。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;先shutdown server&lt;/li&gt;
&lt;li&gt;編輯/Library/Tomcat/conf/tomcat-users.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;內容最下方有一段註解的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;role rolename=&amp;quot;tomcat&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;role1&amp;quot;/&amp;gt;
&amp;lt;user username=&amp;quot;tomcat&amp;quot; password=&amp;quot;&amp;lt;must-be-changed&amp;gt;&amp;quot; roles=&amp;quot;tomcat&amp;quot;/&amp;gt;
&amp;lt;user username=&amp;quot;both&amp;quot; password=&amp;quot;&amp;lt;must-be-changed&amp;gt;&amp;quot; roles=&amp;quot;tomcat,role1&amp;quot;/&amp;gt;
&amp;lt;user username=&amp;quot;role1&amp;quot; password=&amp;quot;&amp;lt;must-be-changed&amp;gt;&amp;quot; roles=&amp;quot;role1&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但刪掉註解後，依舊無法使用Web Manager App的功能。&lt;/p&gt;

&lt;p&gt;因此需要新增角色，在檔案中加入下面的內容(上段註解無需打開)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;role rolename=&amp;quot;admin-gui&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;admin-script&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-gui&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-script&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-jmx&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-status&amp;quot;/&amp;gt;
# [username]、[password]為自定帳號密碼
&amp;lt;user username=&amp;quot;[username]&amp;quot; password=&amp;quot;[password]&amp;quot; roles=&amp;quot;manager-gui,manager-script,manager-jmx,manager-status,admin-script,admin-gui&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;存檔後再start server，就可以使用&lt;code&gt;Server Status&lt;/code&gt;、&lt;code&gt;Manager App&lt;/code&gt;、&lt;code&gt;Host Manager&lt;/code&gt;管理server了。&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tonytsai1984.blogspot.com/2016/09/mac-os-x-tomcat-9.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://tonytsai1984.blogspot.com/2016/09/mac-os-x-tomcat-9.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>［MySQL］安裝與介面化工具(for Mac OS)</title>
      <link>https://eva19950630.github.io/2018/18_11_08_mysql-install-for-mac/</link>
      <pubDate>Thu, 08 Nov 2018 22:54:39 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_11_08_mysql-install-for-mac/</guid>
      <description>

&lt;h2 id=&#34;download-mysql-community-server&#34;&gt;Download MySQL Community Server&lt;/h2&gt;

&lt;p&gt;社群版本，開源免費，但不提供官方技術支援。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/downloads/mysql/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://dev.mysql.com/downloads/mysql/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;open-stop-mysql-server&#34;&gt;Open/Stop MySQL Server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;左上角蘋果圖示 &amp;ndash;&amp;gt; 系統偏好設定 &amp;ndash;&amp;gt; MySQL&lt;/li&gt;
&lt;li&gt;進入操作頁面後，就可以開與關MySQL Server&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;terminal-command&#34;&gt;Terminal Command&lt;/h2&gt;

&lt;h3 id=&#34;增加路徑至-path-iterm2-oh-my-zsh&#34;&gt;增加路徑至$PATH(iTerm2+Oh My Zsh)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 進入並編輯.zshrc檔案
$ vim ~/.zshrc

# 增加以下敘述，增加後儲存離開
export PATH=&amp;quot;/usr/local/mysql/bin:$PATH&amp;quot;

# 關掉terminal，重新打開，輸入以下指令查看$PATH是否有mysql執行路徑
$ echo $PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如此一來，即可在terminal上直接使用&lt;code&gt;mysql&lt;/code&gt;開頭的指令了。&lt;/p&gt;

&lt;h3 id=&#34;進入mysql&#34;&gt;進入MySQL&lt;/h3&gt;

&lt;p&gt;若MySQL下載5.7以上的版本，則安裝包一開始會設定好root初始的密碼(亂數，安裝完需複製)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 若root沒有設定密碼
$ mysql -u root
# 若root有設定密碼，會跳出輸入密碼的提示，輸入密碼後進入
$ mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;重新設定密碼&#34;&gt;重新設定密碼&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql&amp;gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;New Password&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;選擇資料庫&#34;&gt;選擇資料庫&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql&amp;gt; use mysql;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;刷新mysql&#34;&gt;刷新MySQL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql&amp;gt; flush privileges;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;離開mysql&#34;&gt;離開MySQL&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mac用介面化工具-sequel-pro&#34;&gt;Mac用介面化工具(Sequel Pro)&lt;/h2&gt;

&lt;h3 id=&#34;step1-下載sequel-pro&#34;&gt;Step1：下載Sequel Pro&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sequelpro.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Sequel Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step2-開啟sequel-pro-app-登入帳號密碼&#34;&gt;Step2：開啟Sequel Pro.app，登入帳號密碼&lt;/h3&gt;

&lt;p&gt;記得MySQL Server要開啟，帳號密碼輸入剛剛在terminal設定好的root帳號與密碼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_08_mysql-install-for-mac/001.png&#34; alt=&#34;登入root帳號密碼&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_08_mysql-install-for-mac/002.png&#34; alt=&#34;新增帳號資訊至Favorites&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;step3-新增database與table&#34;&gt;Step3：新增database與table&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;新增database：上方工具列Database &amp;ndash;&amp;gt; Add Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_08_mysql-install-for-mac/003.png&#34; alt=&#34;新增database&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;新增table：左下角&amp;rdquo;＋&amp;rdquo;圖示&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_08_mysql-install-for-mac/004.png&#34; alt=&#34;新增table&#34; /&gt;&lt;/p&gt;

&lt;p&gt;接下來就可以進行基本新增欄位等操作了，基本上類似phpmyadmin的使用方法。&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goo.gl/NpZNQA&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://goo.gl/NpZNQA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>［CSS3］Flexbox</title>
      <link>https://eva19950630.github.io/2018/18_11_04_css-flexbox/</link>
      <pubDate>Sun, 04 Nov 2018 21:20:00 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_11_04_css-flexbox/</guid>
      <description>

&lt;p&gt;網頁前端設計時，時常遇到排版區塊的問題，目前有許多排版框架(如：Bootstrap)可以使用並快速排版，而其實CSS3提供了一個很好的排版模型：&lt;code&gt;flexbox&lt;/code&gt;，這讓我們在排版介面時更加快速與彈性，而且能輕鬆進行響應式設計(RWD)，在各大瀏覽器也幾乎都支援，因此&lt;code&gt;flexbox&lt;/code&gt;是近年來愈來愈多人在使用的排版模型。&lt;/p&gt;

&lt;h2 id=&#34;layout-box-model&#34;&gt;Layout Box Model&lt;/h2&gt;

&lt;p&gt;首先先了解flexbox的佈局模型，才能較快上手flexbox，根據&lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1/#box-model&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;W3C&lt;/a&gt;的文章，flexbox的佈局模型如下圖：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/001.png&#34; alt=&#34;flexbox佈局模型&#34; /&gt;&lt;/p&gt;

&lt;p&gt;從上圖可以觀察到：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最外層有一個&lt;code&gt;flex container&lt;/code&gt;包覆著內層兩個&lt;code&gt;flex item&lt;/code&gt;的元件區塊：

&lt;ul&gt;
&lt;li&gt;意指當要使用flexbox時，需在所有要排版的元件區塊最外層包覆著一個容器，並給定flex效果，讓這個容器內所有元件區塊皆有flex效果。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;最外層容器具有水平軸(main axis)、垂直軸(cross axis)、水平的起點與終點(main start、main end)、垂直的起點與終點(cross start、cross end)、水平尺寸(main size)與垂直尺寸(cross size)。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此透過上圖，flexbox的模型概念可以了解成：&lt;/p&gt;

&lt;p&gt;在一個有flex效果的父元件容器(container)當中，裝載著各個區塊子元件(items)，而每個item擺放的位置可透過設定main與cross去劃分位置，將各個區塊擺到相對應的位置上。&lt;/p&gt;

&lt;p&gt;以下將分別介紹父元件容器(container)與子元件區塊(items)可應用的屬性。&lt;/p&gt;

&lt;h2 id=&#34;父元件容器-container&#34;&gt;父元件容器(container)&lt;/h2&gt;

&lt;h3 id=&#34;display&#34;&gt;display&lt;/h3&gt;

&lt;p&gt;在最外層容器一定要設定有flex效果，其內部子元件才會跟著有flex效果。使用display屬性設定，有兩種方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display: flex&lt;/code&gt;：類似display: block，後方元素會強迫換行，但子元件有更多彈性的設定。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display: inline-flex&lt;/code&gt;：類似display: inline-block，意思即一個display: flex外包覆一個display: inline的屬性，後方元素不會換行。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex | inline-flex;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-direction&#34;&gt;flex-direction&lt;/h3&gt;

&lt;p&gt;設定內部子元件的「排列方向」(主軸方向)。&lt;/p&gt;

&lt;p&gt;預設值為&lt;strong&gt;先由左到右，再從上到下&lt;/strong&gt;，總共有四種排列方式可以設定：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flex-direction: row&lt;/code&gt;：預設值，先由左到右，再從上到下。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-direction: row-reverse&lt;/code&gt;：與row相反。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-direction: column&lt;/code&gt;：先從上到下，再由左到右。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-direction: column-reverse&lt;/code&gt;：與column相反。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/002.png&#34; alt=&#34;flex-direction排列方式示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex;
	flex-direction: row | row-reverse | column | column-reverse;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-wrap&#34;&gt;flex-wrap&lt;/h3&gt;

&lt;p&gt;設定內部子元件在父元件有限寬度內「是否換行」。&lt;/p&gt;

&lt;p&gt;因為當container設定為flex屬性後，內部子元件則預設以&lt;strong&gt;不換行&lt;/strong&gt;的方式進行排列，彈性撐滿整個容器。而flex-wrap有三種方式可以設定：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flex-wrap: nowrap&lt;/code&gt;：預設值，單行(不換行)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-wrap: wrap&lt;/code&gt;：多行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-wrap: wrap-reverse&lt;/code&gt;：多行，但內容元件反轉。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/003.png&#34; alt=&#34;flex-wrap設定方式示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex;
	flex-wrap: nowrap | wrap | wrap-reverse;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-flow&#34;&gt;flex-flow&lt;/h3&gt;

&lt;p&gt;為上述&lt;code&gt;flex-direction&lt;/code&gt;與&lt;code&gt;flex-wrap&lt;/code&gt;的&lt;strong&gt;縮寫&lt;/strong&gt;，可同時設定這兩者的屬性。&lt;/p&gt;

&lt;p&gt;語法：flex-flow: [flex-direction屬性] [flex-wrap屬性];&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[flex-direction屬性]、[flex-wrap屬性]分別給定對應的屬性值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	flex-flow: column wrap;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;justify-content&#34;&gt;justify-content&lt;/h3&gt;

&lt;p&gt;設定內部子元件的「水平對齊」位置。&lt;/p&gt;

&lt;p&gt;最上面提到flexbox的佈局模式，有水平的起點與終點(main start、main end)兩個端點，因此可透過justify-content設定內部元件的水平對齊位置，總共有五種對齊方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;justify-content: flex-start&lt;/code&gt;：預設值，對齊最左邊的main start位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content: flex-end&lt;/code&gt;：對齊最右邊的main end位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content: center&lt;/code&gt;：水平置中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content: space-between&lt;/code&gt;：平均分配內容元素，最左邊與最右邊元素會分別貼齊main start與main end位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content: space-around&lt;/code&gt;：平均分配內容元素，各元素的間距也平均分配。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/004.png&#34; alt=&#34;justify-content設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex;
	justify-content: flex-start | flex-end | center | space-between | space-around;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;align-items&#34;&gt;align-items&lt;/h3&gt;

&lt;p&gt;設定內部子元件的「垂直對齊」位置(元件排列為「單行」適用)。&lt;/p&gt;

&lt;p&gt;與上述&lt;code&gt;justify-content&lt;/code&gt;相反，一樣是根據佈局模式垂直起點與終點(cross start、cross end)來對齊相對應位置，總共有五種對齊方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;align-items: flex-start&lt;/code&gt;：對齊最上面的cross start位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items: flex-end&lt;/code&gt;：對齊最下面的cross end位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items: center&lt;/code&gt;：垂直置中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items: stretch&lt;/code&gt;：預設值，所有內容元素整個撐開在容器的有限高度內。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items: baseline&lt;/code&gt;：以所有內容元素的基線(baseline)作為對齊標準。下圖每個元件內「文字大小」不同，因此以文字的底部作為基線。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/005.png&#34; alt=&#34;align-items設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex;
	align-items: flex-start | flex-end | center | stretch | baseline;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;align-content&#34;&gt;align-content&lt;/h3&gt;

&lt;p&gt;設定內部子元件的「垂直對齊」位置(元件排列為「多行」適用)。&lt;/p&gt;

&lt;p&gt;與上述&lt;code&gt;align-items&lt;/code&gt;類似，只是為設定多行元件的垂直對齊位置，總共有六種對齊方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;align-content: flex-start&lt;/code&gt;：對齊最上面的cross start位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content: flex-end&lt;/code&gt;：對齊最下面的cross end位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content: center&lt;/code&gt;：垂直置中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content: space-between&lt;/code&gt;：第一行元素對齊最上面cross start位置，最後一行元素對齊最下面cross end位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content: space-around&lt;/code&gt;：每行平均分配間距。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content: stretch&lt;/code&gt;：預設值，所有內容元素整個撐開在容器的有限高度內。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/006.png&#34; alt=&#34;align-content設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.flex-container {
	display: flex;
	flex-wrap: wrap;
	align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;子元件區塊-items&#34;&gt;子元件區塊(items)&lt;/h2&gt;

&lt;h3 id=&#34;order&#34;&gt;order&lt;/h3&gt;

&lt;p&gt;設定各個子元件的「排列順序」。&lt;/p&gt;

&lt;p&gt;與&lt;code&gt;flex-wrap&lt;/code&gt;不同的是，&lt;code&gt;order&lt;/code&gt;可&lt;strong&gt;個別&lt;/strong&gt;定義子元件的順序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/007.png&#34; alt=&#34;order設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex&amp;quot;&amp;gt;
  &amp;lt;div style=&amp;quot;order: 5&amp;quot;&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;order: 3&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;order: 4&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;order: 2&amp;quot;&amp;gt;4&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;order: 1&amp;quot;&amp;gt;5&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-grow&#34;&gt;flex-grow&lt;/h3&gt;

&lt;p&gt;設定子元件是否具有「伸展性」，配值為一個&lt;strong&gt;數值&lt;/strong&gt;，預設值為「0」，表示不會進行任何伸展變化，設定「1」以上的數值則會在容器有限空間內相對應比例分配伸展長度，但不可設定為負值。&lt;/p&gt;

&lt;p&gt;適用於子元件沒有設定長度時。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/008.png&#34; alt=&#34;flex-grow設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex; width: 500px;&amp;quot;&amp;gt;
  &amp;lt;div style=&amp;quot;flex-grow: 0&amp;quot;&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-grow: 1&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-grow: 5&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-shrink&#34;&gt;flex-shrink&lt;/h3&gt;

&lt;p&gt;設定子元件是否具有「壓縮性」，配值為一個&lt;strong&gt;數值&lt;/strong&gt;，預設值為「1」，設定「0」則不會進行任何壓縮變化，設定「1」以上的數值則會在容器有限空間內相對應比例分配長度，但不可設定為負值。&lt;/p&gt;

&lt;p&gt;適用於子元件有設定長度時。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/009.png&#34; alt=&#34;flex-shrink設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex; width: 500px;&amp;quot;&amp;gt;
  &amp;lt;div style=&amp;quot;flex-shrink: 1; width: 200px;&amp;quot;&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-shrink: 1; width: 200px;&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-shrink: 0; width: 200px;&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-shrink: 1; width: 200px;&amp;quot;&amp;gt;4&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-shrink: 1; width: 200px;&amp;quot;&amp;gt;5&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex-basis&#34;&gt;flex-basis&lt;/h3&gt;

&lt;p&gt;設定子元件的「基本大小」，可使用不同的單位值(例如：px)，預設值為「0」，若沒有設定此屬性則會直接採用&lt;code&gt;flex-grow&lt;/code&gt;屬性，也可以設定為auto，表示以子元素本身的基本大小作為基準。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/010.png&#34; alt=&#34;flex-shrink設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex; width: 500px;&amp;quot;&amp;gt;
  &amp;lt;div style=&amp;quot;flex-basis: 0;&amp;quot;&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-basis: 0;&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-basis: 300px;&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-basis: 0;&amp;quot;&amp;gt;4&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex-basis: 100px;&amp;quot;&amp;gt;5&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flex&#34;&gt;flex&lt;/h3&gt;

&lt;p&gt;為上述三者&lt;code&gt;flex-grow&lt;/code&gt;、&lt;code&gt;flex-shrink&lt;/code&gt;、&lt;code&gt;flex-basis&lt;/code&gt;的&lt;strong&gt;縮寫&lt;/strong&gt;，可同時設定這三者的屬性。&lt;/p&gt;

&lt;p&gt;語法：flex: [flex-grow屬性] [flex-shrink屬性] [flex-basis屬性];&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[flex-grow屬性]、[flex-shrink屬性]、[flex-basis]分別給定對應的屬性值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通常這三個屬性都是適用在製作不同版面大小的元件時，可以透過伸展與壓縮來達到元件不會跑掉的目的，因此如果下方例子第三個區塊將flex-shrink設定為「0」，在壓縮畫面大小的時候，其元件大小依舊為原本設定的大小，不會更動。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/011.png&#34; alt=&#34;flex設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex; width: 500px;&amp;quot;&amp;gt;
  &amp;lt;div style=&amp;quot;flex: 2 1 0&amp;quot;&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex: 1 1 0&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;flex: 0 0 300px&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;align-self&#34;&gt;align-self&lt;/h3&gt;

&lt;p&gt;設定與&lt;code&gt;align-items&lt;/code&gt;相似，其設定種類也一樣(flex-start、flex-end、center、stretch、baseline)，但不同的是，&lt;code&gt;align-self&lt;/code&gt;可針對某一元件做設定，因此若一開始父元件有設定&lt;code&gt;align-items&lt;/code&gt;，當子元件設定&lt;code&gt;align-self&lt;/code&gt;，則會直接覆寫原本父元件所設定的屬性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_11_04_css-flexbox/012.png&#34; alt=&#34;align-self設定示意圖&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;flex-container&amp;quot; style=&amp;quot;display: flex; align-items: stretch;&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt;1&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;align-self: center;&amp;quot;&amp;gt;2&amp;lt;/div&amp;gt;
  &amp;lt;div style=&amp;quot;align-self: flex-end;&amp;quot;&amp;gt;3&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1/#box-model&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.w3.org/TR/css-flexbox-1/#box-model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/css/css3_flexbox.asp&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.w3schools.com/css/css3_flexbox.asp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wcc723.github.io/css/2017/07/21/css-flex/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://wcc723.github.io/css/2017/07/21/css-flex/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oxxostudio.tw/articles/201501/css-flexbox.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.oxxostudio.tw/articles/201501/css-flexbox.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dotblogs.com.tw/leo_codespace/2018/05/02/154954&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://dotblogs.com.tw/leo_codespace/2018/05/02/154954&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>［Java］異常處理機制：throw與throws</title>
      <link>https://eva19950630.github.io/2018/18_11_02_java-throw-throws/</link>
      <pubDate>Fri, 02 Nov 2018 21:31:53 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_11_02_java-throw-throws/</guid>
      <description>

&lt;h2 id=&#34;throw&#34;&gt;throw&lt;/h2&gt;

&lt;p&gt;用於丟出一個異常物件。&lt;/p&gt;

&lt;p&gt;語法：寫於程式語句中。&lt;/p&gt;

&lt;p&gt;throw [例外物件變數];&lt;/p&gt;

&lt;p&gt;舉例：throw new Exception(&amp;ldquo;這是例外錯誤！&amp;rdquo;);&lt;/p&gt;

&lt;h2 id=&#34;throws&#34;&gt;throws&lt;/h2&gt;

&lt;p&gt;用於宣告此method會丟出哪些Exception，表示此method可能會發生哪些例外，加s意指可以同時使用多個Exception子類別修飾方法。&lt;/p&gt;

&lt;p&gt;語法：寫於宣告method的地方。&lt;/p&gt;

&lt;p&gt;舉例：public void function() throws Exception {&amp;hellip;}&lt;/p&gt;

&lt;h3 id=&#34;上述兩者差異&#34;&gt;上述兩者差異&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;寫的地方不同：&lt;code&gt;throw&lt;/code&gt;寫在語句中；&lt;code&gt;throws&lt;/code&gt;寫在函數頭。&lt;/li&gt;
&lt;li&gt;執行可能性：若編譯過程中執行&lt;code&gt;throw&lt;/code&gt;則表示一定發生異常；而&lt;code&gt;throws&lt;/code&gt;只是宣告該method可能發生異常，但不一定會發生這些異常。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;配合使用try-catch&#34;&gt;配合使用try catch&lt;/h2&gt;

&lt;p&gt;Coding時，盡可能在可能出現異常的地方，使用&lt;code&gt;try{...}catch{...}&lt;/code&gt;來捕捉(發現)異常並進行處理。&lt;/p&gt;

&lt;p&gt;發現異常後，一定要在&lt;code&gt;catch{...}&lt;/code&gt;內進行異常發生時的處理。&lt;/p&gt;

&lt;p&gt;如果有在method內寫throw語句丟出異常，盡量在函數頭加上throws進行聲明，若真的發生異常，則會將異常交給上層呼叫此異常方法進行處理(通常在&lt;code&gt;catch{...}&lt;/code&gt;內)。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class test {
	public static void main (String[] args) {
		try {
			score(101);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

	public static void score(int num) throws Exception {
		if (num &amp;gt; 100)
			throw new Exception(&amp;quot;Over&amp;quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Tips&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果有使用到繼承時，若父類別某個method有throws某些例外，子類別欲重新定義該方法，可以throws父類別該方法宣告的某些例外，但不可throws父類別方法中「未宣告」的例外。&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jhengjyun.blogspot.com/2010/06/java-throwthrows.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://jhengjyun.blogspot.com/2010/06/java-throwthrows.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hk.saowen.com/a/3759f3e723abe683f4b20f65bec494c26b097467c095b77de2b0b1778eee8b5e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://hk.saowen.com/a/3759f3e723abe683f4b20f65bec494c26b097467c095b77de2b0b1778eee8b5e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=282977&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=282977&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://openhome.cc/Gossip/Java/Throw.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://openhome.cc/Gossip/Java/Throw.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Github Pages架設Hugo靜態blog</title>
      <link>https://eva19950630.github.io/2018/18_10_29_github-pages-hugo/</link>
      <pubDate>Mon, 29 Oct 2018 09:50:03 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_10_29_github-pages-hugo/</guid>
      <description>

&lt;p&gt;Github除了可以使用Git Server儲存code之外，也可當作靜態網頁的Server，所以可作為個人靜態網頁或blog，但僅能使用git指令上傳修改檔案，而且只能顯示「靜態」網頁內容。&lt;/p&gt;

&lt;h3 id=&#34;操作步驟分為兩部分-使用macos&#34;&gt;操作步驟分為兩部分(使用MacOS)&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;在本地端架設Hugo個人網站(blog)&lt;/li&gt;
&lt;li&gt;部署至Github上成為個人Github pages&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;第一部分-在本地端架設hugo個人網站-blog&#34;&gt;第一部分：在本地端架設Hugo個人網站(blog)&lt;/h2&gt;

&lt;p&gt;Hugo為open source的靜態網頁框架產生器，可快速建立個人網站或blog。&lt;/p&gt;

&lt;h3 id=&#34;step1-使用terminal安裝homebrew&#34;&gt;Step1：使用terminal安裝Homebrew&lt;/h3&gt;

&lt;p&gt;Homebrew為open source的軟體套件管理工具，可簡化在Mac上安裝或卸載套件的過程。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step2-使用terminal安裝hugo&#34;&gt;Step2：使用terminal安裝Hugo&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step3-使用hugo創建新網站&#34;&gt;Step3：使用Hugo創建新網站&lt;/h3&gt;

&lt;p&gt;到想要的目錄下，創建Hugo新網站。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# [website-name]為自定網站資料夾名稱
hugo new site [website-name]
cd [website-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;創建完成後，可在terminal看到以下畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/001.png&#34; alt=&#34;成功建立Hugo網站&#34; /&gt;&lt;/p&gt;

&lt;p&gt;cd至該網站資料夾內，可看到內部資料夾結構如下：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/002.png&#34; alt=&#34;Hugo內部資料夾結構&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;step4-更換主題-theme&#34;&gt;Step4：更換主題(Theme)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;官網&lt;/a&gt;提供許多網站主題，若找到合適的即可使用git clone下載該主題。&lt;/p&gt;

&lt;p&gt;在官網主題內找尋喜歡的主題，並點選進去：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/003.png&#34; alt=&#34;進入主題github&#34; /&gt;&lt;/p&gt;

&lt;p&gt;複製該主題的git網址，並使用git clone下載至&lt;code&gt;themes&lt;/code&gt;資料夾中：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/004.png&#34; alt=&#34;複製git網址&#34; /&gt;&lt;/p&gt;

&lt;p&gt;cd至剛Step3創建好Hugo網站根目錄下的&lt;code&gt;themes&lt;/code&gt;資料夾中(預設目前路徑在Hugo網站根目錄下)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd themes
git clone [該主題git網址]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step5-編輯config-toml檔案&#34;&gt;Step5：編輯config.toml檔案&lt;/h3&gt;

&lt;p&gt;config.toml檔案在根目錄下，使用sublime或其他文字編輯器進行修改，由於之後會將此Hugo個人網站部署至Github上，因此&lt;code&gt;baseURL&lt;/code&gt;需配置為Github pages的網址，而theme為更換剛剛Step4下載的主題資料夾名稱。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;baseURL = &amp;quot;https://[個人Github帳號].github.io/&amp;quot;   # [個人Github帳號]需改為Github帳號
languageCode = &amp;quot;zh-tw&amp;quot;
title = &amp;quot;[My New Hugo Site]&amp;quot;   # [My New Hugo Site]為自定網站名稱
theme = &amp;quot;[Theme dir name]&amp;quot;   # [Theme dir name]為主題資料夾名稱
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step6-建立新文章-post&#34;&gt;Step6：建立新文章(post)&lt;/h3&gt;

&lt;p&gt;在根目錄下輸入以下指令建立新文章。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new posts/[post name].md   # [post name]為自定文章檔案名稱
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按下enter後，則可以在terminal看到以下建立成功畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/005.png&#34; alt=&#34;成功建立新文章&#34; /&gt;&lt;/p&gt;

&lt;p&gt;若建立成功，則可以在目錄下的&lt;code&gt;/contents/posts&lt;/code&gt;資料夾中，看見剛剛新增的文章檔案(.md檔)，使用文字編輯器修改此md檔。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;---
title: &amp;quot;[New Post]&amp;quot;   # [New Post]為自定文章標題
date: 2018-10-29T11:06:37+08:00
draft: false   # 原本為true，改為false
---

[此處可輸入文章內容]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文章使用markdown語法編輯，未來建立文章皆使用Step6這個方式，&lt;code&gt;draft&lt;/code&gt;記得改為false。&lt;/p&gt;

&lt;p&gt;若文章中有使用圖片，圖片檔案放入根目錄中的&lt;code&gt;/static&lt;/code&gt;資料夾內。&lt;/p&gt;

&lt;h3 id=&#34;step7-本地端執行測試&#34;&gt;Step7：本地端執行測試&lt;/h3&gt;

&lt;p&gt;以上步驟即可完成Hugo網站的大致雛形，若想看成品，可在本地端使用terminal先執行測試(在根目錄下)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo serve -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打開瀏覽器，輸入網址&lt;a href=&#34;http://localhost:1313/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt;，可看到如下畫面：
&lt;img src=&#34;https://eva19950630.github.io/18_10_29_github-pages-hugo/006.png&#34; alt=&#34;Hugo網站創建完成&#34; /&gt;&lt;/p&gt;

&lt;p&gt;若要中止執行，在terminal按下&lt;code&gt;ctrl+C&lt;/code&gt;即可。&lt;/p&gt;

&lt;h2 id=&#34;第二部分-部署至github上成為個人github-pages&#34;&gt;第二部分：部署至Github上成為個人Github pages&lt;/h2&gt;

&lt;p&gt;Github提供靜態網站的server，使用者可將靜態網站上傳上去，作為Github pages，一隻帳號僅有一個主頁，這個部分將操作部署剛剛創建好的Hugo網站至Github上。&lt;/p&gt;

&lt;h3 id=&#34;step1-在github上新增一個新repository&#34;&gt;Step1：在Github上新增一個新repository&lt;/h3&gt;

&lt;p&gt;repository name取名為&lt;code&gt;[Github帳號].github.io&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;step2-在hugo網站根目錄下建立-public資料夾&#34;&gt;Step2：在Hugo網站根目錄下建立/public資料夾&lt;/h3&gt;

&lt;p&gt;使用terminal在根目錄下輸入以下指令，執行完後會在根目錄下產生一個&lt;code&gt;public&lt;/code&gt;資料夾。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step3-在-public資料夾內初始化git並連結到github-pages&#34;&gt;Step3：在/public資料夾內初始化git並連結到Github pages&lt;/h3&gt;

&lt;p&gt;先至Github將剛新增repo的git網址複製下來(如第一部分Step4第二張圖)。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public

# 初始化git
git init
git remote add origin [貼上剛複製好的repo git URL]
git remote -v   # 檢查origin名稱是否有遠端連結到該git URL

# 建立第一個commit
git add .
git commit -m &amp;quot;Initial commit&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Hint&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有時候在操作&lt;code&gt;git push&lt;/code&gt;指令時，系統常常會告訴你要設定好要push去哪個分支，產生類似以下的錯誤。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push

fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

	git push --set-upstream origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若今天在push時加入&lt;code&gt;-u&lt;/code&gt;這個參數：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-u&lt;/code&gt;這個參數為表示設定upstream(上游)，以上述例子來看，&lt;code&gt;-u&lt;/code&gt;設定下去後，就會把&lt;code&gt;origin/master&lt;/code&gt;設定為本地&lt;code&gt;master&lt;/code&gt;分支的upstream，下次要再執行&lt;code&gt;git push&lt;/code&gt;指令而不加任何參數時，預設值則會知道是要將master這個分支推往origin這個遠端節點。&lt;/p&gt;

&lt;h3 id=&#34;step4-查看個人github-pages&#34;&gt;Step4：查看個人Github pages&lt;/h3&gt;

&lt;p&gt;上個步驟push完成後，打開瀏覽器輸入網址https://[Github帳號].github.io/，就可以看到自己的Github pages了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hugo建立的網站要連結至Github pages，需在&lt;code&gt;public&lt;/code&gt;資料夾下進行push，往後若網站進行修改後，則需在根目錄下先執行&lt;code&gt;hugo&lt;/code&gt;指令，在cd至public資料夾中進行commit與push。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;另外，若想要將Hugo網站整個資料夾上傳到Github另一個repo，也是可以的，上傳過程中遇到資料夾重複上傳的warning可自動忽略。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/github/using-github-pages.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gitbook.tw/chapters/github/using-github-pages.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/github/push-to-github.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gitbook.tw/chapters/github/push-to-github.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown筆記</title>
      <link>https://eva19950630.github.io/2018/18_10_28_markdown-note/</link>
      <pubDate>Sun, 28 Oct 2018 20:27:16 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/2018/18_10_28_markdown-note/</guid>
      <description>

&lt;h2 id=&#34;一般文字-text&#34;&gt;一般文字(Text)&lt;/h2&gt;

&lt;p&gt;test&lt;/p&gt;

&lt;h2 id=&#34;標題-title&#34;&gt;標題(Title)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# test1.1
## test1.2
### test1.3
#### test1.4
##### test1.5
###### test1.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;test1-1&#34;&gt;test1.1&lt;/h1&gt;

&lt;h2 id=&#34;test1-2&#34;&gt;test1.2&lt;/h2&gt;

&lt;h3 id=&#34;test1-3&#34;&gt;test1.3&lt;/h3&gt;

&lt;h4 id=&#34;test1-4&#34;&gt;test1.4&lt;/h4&gt;

&lt;h5 id=&#34;test1-5&#34;&gt;test1.5&lt;/h5&gt;

&lt;h6 id=&#34;test1-6&#34;&gt;test1.6&lt;/h6&gt;

&lt;h2 id=&#34;引用文字-blockquote&#34;&gt;引用文字(Blockquote)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; test2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;test2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;粗體-斜體-刪除線&#34;&gt;粗體/斜體/刪除線&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 粗體
**test3.1**
__test3.2__
# 斜體
*test4.1*
_test4.2_
# 刪除線
~~test5~~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;test3.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;test3.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;test4.1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;test4.2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;test5&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&#34;無序列點&#34;&gt;無序列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;* test6.1
* test6.2
* test6.3

- test6.4
- test6.5
- test6.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;test6.1&lt;/li&gt;
&lt;li&gt;test6.2&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.3&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.4&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.5&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;test6.6&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;有序列點&#34;&gt;有序列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. test7.1
2. test7.2
3. test7.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;test7.1&lt;/li&gt;
&lt;li&gt;test7.2&lt;/li&gt;
&lt;li&gt;test7.3&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;巢狀列點&#34;&gt;巢狀列點&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. test8.1
   1. test8.1.1
   2. test8.1.2
2. test8.2
   * test8.2.1
   * test8.2.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;test8.1

&lt;ol&gt;
&lt;li&gt;test8.1.1&lt;/li&gt;
&lt;li&gt;test8.1.2&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;test8.2

&lt;ul&gt;
&lt;li&gt;test8.2.1&lt;/li&gt;
&lt;li&gt;test8.2.2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;`test9`

```html
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;test10&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
(```)
# 括號()去掉
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;test9&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;test10&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;連結-link&#34;&gt;連結(Link)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 符號皆為半型
[test11](https://www.google.com/)
test12，連結至Google(https://www.google.com/)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;test11&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;test12，連結至Google(&lt;a href=&#34;https://www.google.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://www.google.com/&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;分隔線&#34;&gt;分隔線&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;***
----
- - -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;表格-table&#34;&gt;表格(Table)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;名稱 | 說明
---------- | ----------
test13.1 | about test13.1
test13.2 | about test13.2
test13.3 | about test13.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名稱&lt;/th&gt;
&lt;th&gt;說明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;test13.1&lt;/td&gt;
&lt;td&gt;about test13.1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;test13.2&lt;/td&gt;
&lt;td&gt;about test13.2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;test13.3&lt;/td&gt;
&lt;td&gt;about test13.3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;圖片-image&#34;&gt;圖片(Image)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![Alt text](/path/to/img.jpg)

# hugo blog需將圖片放置static資料夾中，資料夾內可自由新增其他子資料夾
![test14](/18_10_28_markdown-note/test14.jpg)

# 也可直接使用&amp;lt;img&amp;gt;標籤，即可調整長寬
&amp;lt;img src=&amp;quot;/18_10_28_markdown-note/test14.jpg&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;300&amp;quot;&amp;gt;&amp;lt;/img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_10_28_markdown-note/test14.jpg&#34; alt=&#34;test14&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva19950630.github.io/18_10_28_markdown-note/test14.jpg&#34; width=&#34;300&#34; height=&#34;300&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h2 id=&#34;跳脫字元&#34;&gt;跳脫字元&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# 下方這些符號插入後會產生效果，為了不顯示效果，在下方符號前面插入反斜線(\)，即可顯示原符號
# \ ` * _ {} [] () # + - . !

\*test15\*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*test15*&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://markdown.tw/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://markdown.tw/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/markdown/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://ithelp.ithome.com.tw/markdown/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://eva19950630.github.io/about/</link>
      <pubDate>Sun, 28 Oct 2018 16:11:24 +0800</pubDate>
      
      <guid>https://eva19950630.github.io/about/</guid>
      <description>

&lt;h3 id=&#34;education&#34;&gt;Education&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2017-2018 / Master in Computer Science, University of Taipei, Taiwan&lt;/li&gt;
&lt;li&gt;2013-2017 / Bachelor in Computer Science, University of Taipei, Taiwan&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;interests&#34;&gt;Interests&lt;/h3&gt;

&lt;p&gt;WEB/APP design &amp;amp; development, Deep Learning, Data analysis&lt;/p&gt;

&lt;h3 id=&#34;skill&#34;&gt;Skill&lt;/h3&gt;

&lt;p&gt;HTML, CSS, JS, PHP, Java, C, C++, C#, Python&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>